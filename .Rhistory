side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE) %>%
.[!is.na(control_date), ]
case_control
case_control = original_data %>%
.[, `:=`(strata_id = paste0(
year(date_event),
stringr::str_pad(
month(date_event),
width = 2,
side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE)
case_control
# Create controls for each case
case_control = original_data %>%
.[, `:=`(strata_id = paste0(
year(date_event),
stringr::str_pad(
month(date_event),
width = 2,
side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE) %>%
.[!is.na(control_date), ] %>%
setkey(id, control_date)
case_control
case_control
glimpse(cco_pm)
cco_pm = arrow::read_parquet(
'Data/cco_synthetic.parquet') %>%
mutate(id = as.integer(id))
glimpse(cco_pm)
original_data = cco_pm %>%
filter(case == 1) %>%
select(id, date_event)
original_data
dstrata = data.table(
control_date = ymd(as.IDate(as.Date(min(original_data$date_event)):
as.Date(max(original_data$date_event))))) %>%
.[,`:=`(strata_id = paste0(
year(control_date),
stringr::str_pad(month(control_date), width = 2, side = 'left', pad = '0'),
'0',
wday(control_date)))]
# Create controls for each case
case_control = original_data %>%
.[, `:=`(strata_id = paste0(
year(date_event),
stringr::str_pad(
month(date_event),
width = 2,
side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE) %>%
setkey(id, control_date)
case_control
# Create controls for each case
case_control = original_data %>%
.[, `:=`(strata_id = paste0(
year(date_event),
stringr::str_pad(
month(date_event),
width = 2,
side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE) %>%
select(-strata_id) %>%
setkey(id, control_date)
case_control
cco_pm
dstrata = data.table(
date_control = ymd(as.IDate(as.Date(min(original_data$date_event)):
as.Date(max(original_data$date_event))))) %>%
.[,`:=`(strata_id = paste0(
year(date_control),
stringr::str_pad(month(date_control), width = 2, side = 'left', pad = '0'),
'0',
wday(date_control)))]
# Create controls for each case
case_control = original_data %>%
.[, `:=`(strata_id = paste0(
year(date_event),
stringr::str_pad(
month(date_event),
width = 2,
side = 'left',
pad = '0'
),
'0',
wday(date_event)
))] %>%
merge(dstrata,
by = 'strata_id',
all.x = TRUE,
allow.cartesian = TRUE) %>%
select(-strata_id) %>%
setkey(id, date_control)
case_control
identical(cco_pm[case == 1,.(id, date_event, date_control)], case_control)
identical(cco_pm[case == 1,.(id, date_event, date_control)] %>%
setkey(id, date_control),
case_control)
cco_pm[case == 1,.(id, date_event, date_control)] %>%
setkey(id, date_control)
cco_pm[case == 1,.(id, date_event, date_control)] %>%
arrange(id, date_control)
case_control
cco_pm[,.(id, date_event, date_control)] %>%
arrange(id, date_control)
case_control
identical(
cco_pm[,.(id, date_event, date_control)] %>%
setkey(id, date_control),
case_control)
pacman::p_load(dplyr, raster)
tibble(longitude = c(110.088752, 110.01116, 110.155365,
110.027303, 110.18859, 110.141385, 110.058833, 110.004605, 110.157501,
110.15043), latitude = c(22.126534, 22.202096, 22.210945, 22.275495,
22.15038, 22.230543, 22.291043, 22.256879, 22.176442, 22.294127
))
pacman::p_load(dplyr, raster)
tibble(longitude = c(110.088752, 110.01116, 110.155365,
110.027303, 110.18859, 110.141385, 110.058833, 110.004605, 110.157501,
110.15043), latitude = c(22.126534, 22.202096, 22.210945, 22.275495,
22.15038, 22.230543, 22.291043, 22.256879, 22.176442, 22.294127
))
pacman::p_load(dplyr, raster, data.table)
data.table(longitude = c(110.088752, 110.01116, 110.155365,
110.027303, 110.18859, 110.141385, 110.058833, 110.004605, 110.157501,
110.15043), latitude = c(22.126534, 22.202096, 22.210945, 22.275495,
22.15038, 22.230543, 22.291043, 22.256879, 22.176442, 22.294127
))
data.table(
longitude = c(110.08, 110.01, 110.15, 110.02, 110.18,
110.14, 110.058, 110.01, 110.15, 110.15),
latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15,
22.23, 22.29, 22.25, 22.17, 22.29))
pacman::p_load(dplyr, raster, data.table, arrow)
exposure = read_parquet('Data/exposure_grids.parquet')
exposure
pacman::p_load(dplyr, raster, data.table, arrow, viridis)
exposure = read_parquet('Data/exposure_grids.parquet')
individual = data.table(
longitude = c(110.08, 110.01, 110.15, 110.02, 110.18,
110.14, 110.058, 110.01, 110.15, 110.15),
latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15,
22.23, 22.29, 22.25, 22.17, 22.29))
pacman::p_load(dplyr, raster, data.table, arrow, viridis)
exposure = read_parquet('Data/exposure_grids.parquet')
exposure
individual = data.table(
longitude = c(110.08, 110.01, 110.15, 110.02, 110.18,
110.14, 110.058, 110.01, 110.15, 110.15),
latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15,
22.23, 22.29, 22.25, 22.17, 22.29))
individual
pacman::p_load(dplyr, raster, data.table, arrow, viridis, ggplot2)
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-01')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6)
pacman::p_load(dplyr, raster, data.table, arrow, viridis, ggplot2, lubridate)
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-01')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-07')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-02')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
scale_fill_distiller() +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
scale_fill_hue() +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
scale_fill_gradient() +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.6) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test()
ggplot() +
geom_point(data = individual, aes(x = longitude, y = latitude), color = 'black') +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test()
ggplot() +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
geom_point(data = individual, aes(x = longitude, y = latitude),
color = 'black', size = 1) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test()
ggplot() +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
geom_point(data = individual, aes(x = longitude, y = latitude),
color = 'black', size = 5) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test()
ggplot() +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
geom_point(data = individual, aes(x = longitude, y = latitude),
color = 'black', size = 5) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test() +
coord_equal()
ggplot() +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
geom_point(data = individual, aes(x = longitude, y = latitude),
color = 'black', size = 1) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test() +
coord_equal()
ggplot() +
geom_tile(data = exposure %>%
filter(date == ymd('2014-01-03')),
aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +
geom_point(data = individual, aes(x = longitude, y = latitude),
color = 'black', size = 3) +
scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +
theme_test() +
coord_equal()
ext <- extract(
exposure,
individual[,c(individual.lon,individual.lat)],
method = "bilinear")
ext <- extract(
exposure,
individual[,c(longitude,latitude)],
method = "bilinear")
ext <- extract(
exposure,
individual[,c('longitude','latitude')],
method = "bilinear")
individual = data.frame(
longitude = c(110.08, 110.01, 110.15, 110.02, 110.18,
110.14, 110.058, 110.01, 110.15, 110.15),
latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15,
22.23, 22.29, 22.25, 22.17, 22.29))
ext <- extract(
exposure,
individual[,c('longitude', 'latitude')],
method = "bilinear")
exposure
class(exposure)
?extract
ext <- raster::extract(
exposure,
individual[,c('longitude', 'latitude')],
method = "bilinear")
?raster::extract
exposure_daily = rasterFromXYZ(variable[,c(longitude, latitude, PM2.5)])
exposure_daily = rasterFromXYZ(exposure[,c(longitude, latitude, PM2.5)])
exposure_daily = rasterFromXYZ(exposure[,c('longitude', 'latitude', 'PM2.5')])
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
rasterFromXYZ()
exposure %>%
filter(date == ymd('2014-01-03'))
?rasterFromXYZ
exposure = read_parquet('Data/exposure_grids.parquet', as_data_frame = T)
exposure
class(exposure)
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
as.matrix() %>%
rasterFromXYZ()
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
as.matrix()
exposure_daily
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
arrange(longitude, latitude) %>%
as.matrix() %>%
rasterFromXYZ()
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
arrange(longitude, latitude) %>%
as.matrix()
exposure_daily
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(x = longitude, y = latitude, PM2.5) %>%
#arrange(longitude, latitude) %>%
#as.matrix() %>%
rasterFromXYZ()
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(x = longitude, y = latitude, PM2.5)
View(exposure_daily)
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(x = longitude, y = latitude, PM2.5) %>%
mutate(longitude = round(longitude, 2),
latitude = round(latitude, 2)) %>%
#arrange(longitude, latitude) %>%
#as.matrix() %>%
rasterFromXYZ()
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
mutate(longitude = round(longitude, 2),
latitude = round(latitude, 2)) %>%
#arrange(longitude, latitude) %>%
#as.matrix() %>%
rasterFromXYZ()
ext <- raster::extract(
exposure_daily,
individual[,c('longitude', 'latitude')],
method = "bilinear")
ext
individual %>%
mutate(PM2.5 = raster::extract(
exposure_daily,
individual[,c('longitude', 'latitude')],
method = "bilinear"))
individual = data.frame(
longitude = c(110.08, 110.01, 110.15, 110.02, 110.18,
110.14, 110.058, 110.01, 110.15, 110.15),
latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15,
22.23, 22.29, 22.25, 22.17, 22.29)) %>%
mutate(longitude = round(longitude, 2),
latitude = round(latitude, 2))
individual
exposure_daily = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
#arrange(longitude, latitude) %>%
#as.matrix() %>%
rasterFromXYZ()
exposure = read_parquet('Data/exposure_grids.parquet', as_data_frame = T) %>%
mutate(longitude = round(longitude, 2),
latitude = round(latitude, 2))
individual %>%
mutate(PM2.5 = raster::extract(
exposure_daily,
individual[,c('longitude', 'latitude')],
method = "bilinear"))
exposure
eval_pollutant = individual %>%
mutate(
PM2.5 = raster::extract(
exposure_PM2.5,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
SO4 = raster::extract(
exposure_SO4,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
NO3 = raster::extract(
exposure_NO3,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
NH4 = raster::extract(
exposure_NH4,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
OM = raster::extract(
exposure_OM,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
BC = raster::extract(
exposure_BC,
individual[,c('longitude', 'latitude')],
method = "bilinear"))
exposure_BC
exposure_PM2.5 = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, PM2.5) %>%
rasterFromXYZ()
exposure_SO4 = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, SO4) %>%
rasterFromXYZ()
exposure_NO3 = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, NO3) %>%
rasterFromXYZ()
exposure_NH4 = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, NH4) %>%
rasterFromXYZ()
exposure_OM = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, OM) %>%
rasterFromXYZ()
exposure_BC = exposure %>%
filter(date == ymd('2014-01-03')) %>%
dplyr::select(longitude, latitude, BC) %>%
rasterFromXYZ()
exposure_BC
eval_pollutant = individual %>%
mutate(
PM2.5 = raster::extract(
exposure_PM2.5,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
SO4 = raster::extract(
exposure_SO4,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
NO3 = raster::extract(
exposure_NO3,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
NH4 = raster::extract(
exposure_NH4,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
OM = raster::extract(
exposure_OM,
individual[,c('longitude', 'latitude')],
method = "bilinear"),
BC = raster::extract(
exposure_BC,
individual[,c('longitude', 'latitude')],
method = "bilinear"))
eval_pollutant
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, lme4, splines)
cohort_lme = arrow::read_parquet(
'Data/cohort_lmer_synthetic.parquet')
glimpse(cohort_lme)
