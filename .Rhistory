.[['PM10_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM10')] %>%
.[]
p_cox_pm10 = sp_cox_pm10 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[2]) +
geom_line(linewidth = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[2], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm10
quantile(cohort_cox$PM10_MA_365, c(0.25, 0.5, 0.75))
quantile(cohort_cox$PM10_MA_365, c(0.01, 0.99))
fit_cox_pm10 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM10_MA_365, knots = c(40.48, 80, 90)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM10_MA_365 > 40 & PM10_MA_365 < 105))
sp_cox_pm10 = fit_cox_pm10 %>%
termplot(se = T, plot = F) %>%
.[['PM10_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM10')] %>%
.[]
p_cox_pm10 = sp_cox_pm10 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[2]) +
geom_line(linewidth = 1.5, color = color7[2]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[2], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm10
p_cox_pm2.5|p_cox_pm10
p_cox_pm2.5/p_cox_pm10
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, splines, purrr, tableone, patchwork, latex2exp)
cs_pm = arrow::read_parquet(
'Data/cs_synthetic_pm_components.parquet')
glimpse(cs_pm)
var_vec = c("age", "sex", "ethnicity", "occupation", "marriage",
"stroke_subtype", "hypertension", "diabetes", "Temperature_MA_07",
"RH_MA_07", "PM2.5_MA_365", "SO4_MA_365", "NO3_MA_365", "NH4_MA_365",
"OM_MA_365", "BC_MA_365")
var_vec
var_fct = c("sex", "ethnicity", "occupation", "marriage",
"stroke_subtype", "hypertension", "diabetes")
var_fct
tab1 = cs_pm %>%
CreateTableOne(
vars = var_vec,
factorVars = var_fct,
strata = 'inhosp_death',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1
View(tab1)
View(tab1)
var_vec = c("age", "sex", "ethnicity", "occupation", "marriage",
"stroke_subtype", "hypertension", "diabetes", "Temperature_MA_07",
"RH_MA_07", "PM2.5_MA_365", "SO4_MA_365", "NO3_MA_365", "NH4_MA_365",
"OM_MA_365", "BC_MA_365")
var_fct = c("sex", "ethnicity", "occupation", "marriage",
"stroke_subtype", "hypertension", "diabetes")
tab1 = cs_pm %>%
CreateTableOne(
vars = var_vec,
factorVars = var_fct,
strata = 'inhosp_death',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1
View(tab1)
tab1_v2 = tab1 %>%
mutate(variables = gsub('\\.\\.\\.\\.', '', variables, perl = TRUE),
variables = fifelse(grepl('X\\.', variables, perl = TRUE)|
variables == 'X', '', variables),
variables = gsub('\\.\\.mean\\.\\.SD\\.\\.', ', mean (SD)',
variables, perl = TRUE))
tab1_v2
View(tab1_v2)
add_comma = function(x, separator = ','){
str_pattern = '(\\d+|\\d+\\.\\d+)(\\s+\\((\\s+|)(\\d+| \\d+)\\.\\d+\\))'
d_numb = gsub('^\\s+|^\\s+$', '', x) %>%
gsub(str_pattern, '\\1', .) %>%
as.numeric() %>%
suppressWarnings() %>%
scales::label_comma(
accuracy = 0.01,
decimal.mark = ".",
big.mark = separator)(.)
d_perc = gsub(str_pattern, '\\2', x)
return_vec = ifelse(
grepl('(\\d+)( \\()((\\d+| \\d+)\\.\\d+)(\\))', x),
paste0(d_numb, d_perc) %>%
gsub('\\.00', '', .) %>%
gsub('\\s+\\(', ' \\(', .),
x)
return(return_vec)
}
tab1_v3 = tab1_v2 %>%
mutate(across(Overall:`1`, add_comma))
tab1_v3
View(tab1_v3)
fwrite(tab1_v3, 'tab1.csv')
getwd()
fit_logistic = function(x, data = cs_pm, outcome_var = 'inhosp_death'){
cat(paste0(x, '\n'))
x_iqr = IQR(data[[x]], na.rm = TRUE)
clean_fit = glm(
formula = as.formula(paste0(outcome_var, " ~ ",
x,
' + age + sex + ethnicity + occupation + marriage + stroke_subtype +
hypertension + diabetes +
ns(Temperature_MA_07 , df = 5) + ns(RH_MA_07, df = 5)')),
family = binomial, #Logistic regression设置连接函数
data = data) %>%
tidy() %>%
#filter(grepl('PM|O3|CO|NO2|SO2', term)) %>%
mutate(OR = exp(estimate*x_iqr), 3,
OR_round = round(exp(estimate*x_iqr), 3),
CI_low = exp(estimate*x_iqr - 1.96*std.error*x_iqr),
CI_high = exp(estimate*x_iqr + 1.96*std.error*x_iqr),
CI_low_round = round(exp(estimate*x_iqr - 1.96*std.error*x_iqr), 3),
CI_high_round = round(exp(estimate*x_iqr + 1.96*std.error*x_iqr), 3),
predictor = x) %>%
mutate(result = paste0(format(OR_round, nsmall = 3),
' (',
format(CI_low_round, nsmall = 3),
'-',
format(CI_high_round, nsmall = 3),
')') %>%
gsub(' ', '', .) %>%
gsub('\\(', ' (', .),
pollutant_IQR = x_iqr) %>%
mutate(result = gsub('000e\\+00', '', result)) %>%
select(predictor, term, pollutant_IQR, result, OR, CI_low, CI_high, p.value)
return(clean_fit)
}
fit_longterm_365 = purrr::map_df(
c("PM2.5_MA_365", "SO4_MA_365", "NO3_MA_365",
"NH4_MA_365", "OM_MA_365", "BC_MA_365"),
fit_logistic,
data = cs_pm)
fit_longterm_365
View(fit_longterm_365)
fit_longterm_365 %>%
filter(predictor == term)
fit_longterm_365_v1 = fit_longterm_365 %>%
filter(predictor == term)
View(fit_longterm_365_v1)
fwrite(fit_longterm_365_v1, 'tab2.csv')
quantile(cs_pm$PM2.5_MA_365, c(0.25, 0.5, 0.75))
quantile(cs_pm$PM2.5_MA_365, c(0.01, 0.99))
fit_pm2.5 = glm(
inhosp_death ~ ns(PM2.5_MA_365, knots = c(40.48, 65.54, 75.58)) +
age + sex + ethnicity + occupation + marriage + stroke_subtype,
family = binomial,
data = cs_pm %>%
filter(PM2.5_MA_365 > 21.38 & PM2.5_MA_365 < 80))
fit_pm2.5 = glm(
inhosp_death ~ ns(PM2.5_MA_365, knots = c(40.48, 65.54, 75.58)) +
age + sex + ethnicity + occupation + marriage + stroke_subtype,
family = binomial,
data = cs_pm %>%
filter(PM2.5_MA_365 > 21.38 & PM2.5_MA_365 < 80))
sp_pm2.5 = fit_pm2.5 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')] %>%
.[]
sp_pm2.5
View(sp_pm2.5)
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
mylabel = function(val) { return(lapply(val, function(x) arr[x])) }
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_pm2.5 = sp_pm2.5 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(linewidth = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Odds of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_pm2.5
fit_pm2.5 = glm(
inhosp_death ~ ns(PM2.5_MA_365, knots = c(40.48, 65.54, 75.58)) +
age + sex + ethnicity + occupation + marriage + stroke_subtype,
family = binomial,
data = cs_pm %>%
filter(PM2.5_MA_365 > 21.38 & PM2.5_MA_365 < 90))
sp_pm2.5 = fit_pm2.5 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')] %>%
.[]
sp_pm2.5
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
mylabel = function(val) { return(lapply(val, function(x) arr[x])) }
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_pm2.5 = sp_pm2.5 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(linewidth = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Odds of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_pm2.5
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, survival, splines, survival, purrr, latex2exp, patchwork)
cohort_cox = arrow::read_parquet(
'Data/cohort_Cox_synthetic.parquet')
glimpse(cohort_cox)
fit0 = coxph(
formula = Surv(t2rehosp, rehosp_staus) ~ PM1_MA_365 + age + ethnicity +
marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox)
class(fit0)
fit0
# 提取结果成数据框，方便导出excel
fit0 %>%
tidy()
# 提取结果为exp后的HR值，而非线性项的值
fit0 %>%
tidy(exponentiate = TRUE)
# 提取结果为exp后的HR值，而非线性项的值
fit0 %>%
tidy(exponentiate = TRUE, conf.int = T, conf.level = 0.95)
fit_cox = function(x, dat = drehosp, scale_num = 10){
clean_fit = coxph(
formula = as.formula(paste0("Surv(t2rehosp, rehosp_staus) ~ ",
x,
' + age + ethnicity + marriage + occupation +
ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5)')),
data = dat) %>%
tidy() %>%
filter(grepl('PM|O3|CO|NO2|SO2', term)) %>%
mutate(OR = exp(estimate*scale_num), 3,
OR_round = round(exp(estimate*scale_num), 3),
CI_low = exp(estimate*scale_num - 1.96*std.error*scale_num),
CI_high = exp(estimate*scale_num + 1.96*std.error*scale_num),
CI_low_round = round(exp(estimate*scale_num - 1.96*std.error*scale_num), 3),
CI_high_round = round(exp(estimate*scale_num + 1.96*std.error*scale_num), 3),
predictor = x) %>%
mutate(result = paste0(format(OR_round, nsmall = 3),
' (',
format(CI_low_round, nsmall = 3),
'-',
format(CI_high_round, nsmall = 3),
')')) %>%
select(predictor, term, result, OR, CI_low, CI_high, p.value)
print(x)
return(clean_fit)
}
estimate_cox = map_dfr(
c("PM1_MA_365", "PM2.5_MA_365", "PM10_MA_365"),
fit_cox,
dat = cohort_cox,
scale_num = 10)
estimate_cox
quantile(cohort_cox$PM2.5_MA_365, c(0.25, 0.5, 0.75))
quantile(cohort_cox$PM2.5_MA_365, c(0.01, 0.99))
fit_cox_pm2.5 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM2.5_MA_365, knots = c(40.48, 60, 63)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM2.5_MA_365 > 21.55 & PM2.5_MA_365 < 67))
sp_cox_pm2.5 = fit_cox_pm2.5 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')] %>%
.[]
sp_cox_pm2.5
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
mylabel = function(val) { return(lapply(val, function(x) arr[x])) }
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_cox_pm2.5 = sp_cox_pm2.5 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(linewidth = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm2.5
quantile(cohort_cox$PM10_MA_365, c(0.25, 0.5, 0.75))
quantile(cohort_cox$PM10_MA_365, c(0.01, 0.99))
fit_cox_pm10 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM10_MA_365, knots = c(40.48, 80, 90)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM10_MA_365 > 40 & PM10_MA_365 < 105))
sp_cox_pm10 = fit_cox_pm10 %>%
termplot(se = T, plot = F) %>%
.[['PM10_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM10')] %>%
.[]
p_cox_pm10 = sp_cox_pm10 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[2]) +
geom_line(linewidth = 1.5, color = color7[2]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[2], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm10
p_cox_pm2.5|p_cox_pm10
p_cox_pm2.5/p_cox_pm10
class(fit0)
fit0
# 提取结果成数据框，方便导出excel
fit0 %>%
tidy()
# 提取结果为exp后的HR值，而非线性项的值
fit0 %>%
tidy(exponentiate = TRUE)
# 提取结果为exp后的HR值，而非线性项的值
fit0 %>%
tidy(exponentiate = TRUE, conf.int = T, conf.level = 0.95)
# 提取结果为exp后的HR值，而非线性项的值
fit0 %>%
tidy(exponentiate = TRUE, conf.int = T, conf.level = 0.95)
fit_cox = function(x, dat = drehosp, scale_num = 10){
clean_fit = coxph(
formula = as.formula(paste0("Surv(t2rehosp, rehosp_staus) ~ ",
x,
' + age + ethnicity + marriage + occupation +
ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5)')),
data = dat) %>%
tidy() %>%
filter(grepl('PM|O3|CO|NO2|SO2', term)) %>%
mutate(OR = exp(estimate*scale_num), 3,
OR_round = round(exp(estimate*scale_num), 3),
CI_low = exp(estimate*scale_num - 1.96*std.error*scale_num),
CI_high = exp(estimate*scale_num + 1.96*std.error*scale_num),
CI_low_round = round(exp(estimate*scale_num - 1.96*std.error*scale_num), 3),
CI_high_round = round(exp(estimate*scale_num + 1.96*std.error*scale_num), 3),
predictor = x) %>%
mutate(result = paste0(format(OR_round, nsmall = 3),
' (',
format(CI_low_round, nsmall = 3),
'-',
format(CI_high_round, nsmall = 3),
')')) %>%
select(predictor, term, result, OR, CI_low, CI_high, p.value)
print(x)
return(clean_fit)
}
estimate_cox = map_dfr(
c("PM1_MA_365", "PM2.5_MA_365", "PM10_MA_365"),
fit_cox,
dat = cohort_cox,
scale_num = 10)
estimate_cox
quantile(cohort_cox$PM2.5_MA_365, c(0.25, 0.5, 0.75))
quantile(cohort_cox$PM2.5_MA_365, c(0.01, 0.99))
fit_cox_pm2.5 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM2.5_MA_365, knots = c(40.48, 60, 63)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM2.5_MA_365 > 21.55 & PM2.5_MA_365 < 67))
fit_cox_pm2.5 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM2.5_MA_365, knots = c(40.48, 60, 63)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM2.5_MA_365 > 21.55 & PM2.5_MA_365 < 67))
sp_cox_pm2.5 = fit_cox_pm2.5 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')] %>%
.[]
sp_cox_pm2.5
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
mylabel = function(val) { return(lapply(val, function(x) arr[x])) }
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_cox_pm2.5 = sp_cox_pm2.5 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(linewidth = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm2.5
quantile(cohort_cox$PM10_MA_365, c(0.25, 0.5, 0.75))
quantile(cohort_cox$PM10_MA_365, c(0.01, 0.99))
fit_cox_pm10 = coxph(
Surv(t2rehosp, rehosp_staus) ~ ns(PM10_MA_365, knots = c(40.48, 80, 90)) +
age + ethnicity + marriage + occupation + ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5),
data = cohort_cox %>%
filter(PM10_MA_365 > 40 & PM10_MA_365 < 105))
sp_cox_pm10 = fit_cox_pm10 %>%
termplot(se = T, plot = F) %>%
.[['PM10_MA_365']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM10')] %>%
.[]
p_cox_pm10 = sp_cox_pm10 %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[2]) +
geom_line(linewidth = 1.5, color = color7[2]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Hazard of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[2], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_cox_pm10
p_cox_pm2.5|p_cox_pm10
p_cox_pm2.5/p_cox_pm10
