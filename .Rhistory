cco_pm
fit_clogit = function(x, tm_RH_lag = 'MA_07', data = cco_pm){
print(glue::glue('\n----------{x}; {tm_RH_lag}----------\n'))
iqr_x = IQR(data[[x]], na.rm = TRUE)
clean_fit = clogit(
formula = as.formula(paste0("case ~ ",
x,
' + ns(Temperature_',
tm_RH_lag,
', df = 5) + ns(RH_',
tm_RH_lag,
', df = 5)',
' + strata(id)')),
data = data) %>%
broom::tidy() %>%
mutate(OR = exp(estimate*iqr_x), 3,
OR_round = round(exp(estimate*iqr_x), 3),
CI_low = exp(estimate*iqr_x - 1.96*std.error*iqr_x),
CI_high = exp(estimate*iqr_x + 1.96*std.error*iqr_x),
CI_low_round = round(exp(estimate*iqr_x - 1.96*std.error*iqr_x), 3),
CI_high_round = round(exp(estimate*iqr_x + 1.96*std.error*iqr_x), 3),
predictor = x,
iqr = iqr_x,
tm_RH_lag = tm_RH_lag) %>%
mutate(result = paste0(format(OR_round, nsmall = 3),
' (',
format(CI_low_round, nsmall = 3),
'-',
format(CI_high_round, nsmall = 3),
')')) %>%
filter(predictor == term) %>%
mutate(result = gsub('000e\\+00| ', '', result)) %>%
select(predictor, term, iqr, result, OR, CI_low, CI_high, p.value)
return(clean_fit)
}
pm_cols = cco_pm %>%
select(starts_with('PM2.5')) %>%
names()
fit_cco = map_dfr(
pm_cols,
fit_clogit,
data = cco_pm)
fit_cco
cco_pm
glimpse(cco_pm)
fit_cco
pm_cols
fit_cco = map_dfr(
pm_cols,
fit_clogit,
data = cco_pm)
fit_cco
cco_pm
fit_pm1 = clogit(
case ~ ns(PM2.5_MA_01, df = 4, knots = c(20, 70, 80)) +
ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5) + strata(id),
data = cco_pm)
linear_hypo(fit_pm1)
cco_pm[,quantile(PM2.5_MA_01, c(0.25, 0.5, 0.75))]
fit_pm1 = clogit(
case ~ ns(PM2.5_MA_01, df = 4, knots = c(24.85516, 36.29862, 54.21549)) +
ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5) + strata(id),
data = cco_pm)
sp_pm1 = fit_pm1 %>%
termplot(se = T, plot = F) %>%
.[['PM1_MA_01']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM1')]
sp_pm1 = fit_pm1 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_01']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')]
cco_pm[,quantile(PM2.5_MA_01, c(0.01, 0.99))]
p_pm1 = sp_pm1 %>%
.[x >= 7 & x <= 154] %>%
.[sample(.N, 1000)] %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, size = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(size = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Odds of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
#axis.text.x = element_blank(),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_pm1 = sp_pm1 %>%
.[x >= 7 & x <= 154] %>%
.[sample(.N, 1000)] %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, size = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(size = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Odds of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
#axis.text.x = element_blank(),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
sp_pm1 = fit_pm1 %>%
termplot(se = T, plot = F) %>%
.[['PM2.5_MA_01']] %>%
as.data.table() %>%
.[,`:=`(HR = exp(y),
HRmin = exp(y - 1.96*se),
HRmax = exp(y + 1.96*se))] %>%
.[, `:=`(pollutant = 'PM2.5')] %>%
.[]
sp_pm1
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, survival, splines, purrr, latex2exp)
cco_pm = arrow::read_parquet(
'Data/cco_synthetic.parquet')
glimpse(cco_pm)
cco_pm
arr = list('PM1' = TeX("PM$_{1}$"),
"PM2.5" = TeX("PM$_{2.5}$"),
"PM10" = TeX("PM$_{10}$"))
mylabel = function(val) { return(lapply(val, function(x) arr[x])) }
cco_pm[,quantile(PM2.5_MA_01, c(0.01, 0.99))]
color7 = c('#7570b3', '#d95f02', '#1b9e77')
p_pm1 = sp_pm1 %>%
.[x >= 7 & x <= 154] %>%
.[sample(.N, 1000)] %>%
ggplot(aes(x = x, y = HR)) +
geom_hline(yintercept = 1, size = 0.8, alpha = 0.6, linetype = 'dashed') +
geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +
geom_line(size = 1.5, color = color7[1]) +
facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0.05)) +
labs(x = NULL, y = 'Odds of death') +
theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'
theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),
plot.title = element_text(size = 20, face = 'bold'),
strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),
strip.text = element_text(size = 18, face = 'bold'))
p_pm1
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, survival, splines, purrr, latex2exp, patchwork)
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, survival, splines, purrr, latex2exp, patchwork, tableone)
cco_pm = arrow::read_parquet(
'Data/cco_synthetic.parquet')
glimpse(cco_pm)
cco_pm
names(cco_pm) %>% dput
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'hypertension',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE)
var_vec = c("Temperature_MA_07",
"RH_MA_07", "PM2.5_MA_01", "PM2.5_MA_02", "PM2.5_MA_03", "PM2.5_MA_04",
"PM2.5_MA_05", "PM2.5_MA_06", "PM2.5_MA_07")
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'hypertension',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE)
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE)
tab1
var_vec = c("Temperature_MA_07",
"RH_MA_07", "PM2.5_MA_01", "PM2.5_MA_02", "PM2.5_MA_03", "PM2.5_MA_04",
"PM2.5_MA_05", "PM2.5_MA_06", "PM2.5_MA_07")
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
.[,`:=`(test = NULL)] %>%
.[,`:=`(variables = gsub('\\.\\.\\.\\.', '', variables, perl = TRUE))] %>%
.[,`:=`(variables = fifelse(grepl('X\\.', variables, perl = TRUE)|
variables == 'X', '', variables))] %>%
.[,`:=`(variables = gsub('\\.\\.mean\\.\\.SD\\.\\.', ', mean (SD)',
variables, perl = TRUE))] %>%
.[,variables := gsub('\\.\\.median\\.\\.IQR\\.\\.', ', median (IQR)',
variables, perl = TRUE)] %>%
.[]
tab1
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case',
addOverall = TRUE) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1
tab1 = cco_pm %>%
CreateContTable(
vars = var_vec,
funcNames = c("mean", "sd", "median", "p5", "p25", "p75", "min",
"max")) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1 = CreateContTable(
data = cco_pm,
vars = var_vec,
funcNames = c("mean", "sd", "median", "p5", "p25", "p75", "min",
"max")) %>%
print(formatOptions = list(big.mark = ","),
missing = TRUE,
catDigits = 2,
contDigits = 2,
showAllLevels = TRUE,
printToggle = FALSE) %>%
as.data.frame() %>%
setDT(x = ., keep.rownames = 'variables') %>%
dplyr::select(-test)
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec)
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case',
addOverall = TRUE)
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case') %>%
.$ContTable
tab1
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case') %>%
.$ContTable %>%
summary(funcNames = c("mean", "sd", "median", "p5", "p25", "p75", "min",
"max"))
tab1
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case') %>%
.$ContTable %>%
summary()
tab1
tab1 = cco_pm %>%
CreateTableOne(
vars = var_vec,
#factorVars = fact_var,
strata = 'case') %>%
.$ContTable
tab1
pacman::p_load(lubridate, glue, tidyr, purrr, broom, mgcv, dplyr, data.table, ggplot2)
ts_city = arrow::read_parquet('Data/ts_synthetic.parquet') %>%
mutate(admit_date_int = as.integer(admit_date))
glimpse(ts_city)
count(ts_city, City)
count(ts_city, dow)
fit_ts_sep = function(pm_components, df_date, y, dat){
fit_model = glue('{y} ~ {pm_components} +
s(admit_date_int, k = {df_date}, fx = T, bs = "cr") +
dow + s(Temperature_MA_07, k = 6) +
s(RH_MA_07, k = 6)') %>%
as.formula() %>%
gam(family = quasipoisson(link = "log"),
scale = -1,
control = gam.control(epsilon = 0.0000001,
maxit = 1000),
na.action = na.omit,
data = dat)
coef_vec = summary(fit_model)$p.coeff
se_vec = summary(fit_model)$se
pval_vec = summary(fit_model)$p.pv
coef_point = coef_vec[names(coef_vec) == pm_components]
se_point = se_vec[names(se_vec) == pm_components]
pval_point = pval_vec[names(pval_vec) == pm_components]
ER = (exp(coef_point) - 1)*100
CI_lower = (exp(coef_point - 1.96*se_point) - 1)*100
CI_upper = (exp(coef_point + 1.96*se_point) - 1)*100
ER_95CI = glue("{formatC(round(ER, 2), format = 'f', digits = 2)} ",
"({formatC(round(CI_lower, 2), format = 'f', digits = 2)} to ",
"{formatC(round(CI_upper, 2), format = 'f', digits = 2)})")
output = data.table(
pm_components = pm_components,
#pm_component_IQR = formatC(round(IQR_range, 2), format = 'f', digits = 2),
n = dat[,.N],
ER_95CI = ER_95CI,
ER = ER,
CI_lower = CI_lower,
CI_upper = CI_upper,
p_value = pval_point,
log_OR = coef_point,
log_OR_se = se_point)
return(output)
}
map_city = function(dat, df_date, y){
#pb$tick()$print()
df_date_vector = rep(df_date, length(pollutant_vec7))
res = map2_dfr(pollutant_vec7, df_date, fit_ts_sep, dat = dat, y = y)
return(res)
}
pollutant_vec7 = c(
"PM2.5_MA_07", "BC_MA_07", "OM_MA_07", "SO4_MA_07", "NO3_MA_07", "NH4_MA_07")
IQR_pollutant = map_dfr(
pollutant_vec7,
~data.table(pollutant = .x,
IQR = IQR(ts_city[[.x]], na.rm = TRUE)))
IQR_pollutant
city_obs_length = ts_city %>%
group_by(City) %>%
summarise(admit_date_min = min(admit_date),
admit_date_max = max(admit_date),
obs_length = as.integer(max(admit_date) - min(admit_date))/365,
df = round(obs_length)*4) %>%
ungroup()
city_obs_length
models_city = ts_city %>%
mutate(across(PM2.5_MA_07:BC_MA_07, ~.x/IQR(.x))) %>%
group_by(City) %>%
nest() %>%
left_join(city_obs_length %>%
dplyr::select(City, df),
by = 'City') %>%
mutate(models = map2(data, df, map_city, y = 'N'))
models_city
estimate_city = models_city %>%
select(-data) %>%
unnest(cols = c(models)) %>%
setDT()
estimate_city
models_city
estimate_city
View(estimate_city)
estimate_city
tidy_rma = function(x, dat){
dat %>%
.[pm_components == x] %>%
.[,metafor::rma(yi = log_OR, sei = log_OR_se)] %>%
tidy(conf.int = T, exponentiate = T) %>%
mutate(pollut = x,
`ER (95% CI)` = glue(
"{formatC((estimate - 1)*100,
format = 'f', digits = 2)}% ({formatC((conf.low - 1)*100,
format = 'f', digits = 2)} to {formatC((conf.high - 1)*100,
format = 'f', digits = 2)}%)")) %>%
dplyr::select(pollut,
`ER (95% CI)`,
OR = estimate,
OR_CI_low = conf.low,
OR_CI_up = conf.high,
p_val = p.value,
se = std.error)
}
estimate_meta = map_dfr(pollutant_vec7, tidy_rma, dat = estimate_city)
estimate_meta
View(estimate_meta)
estimate_meta %>%
mutate(pollutant = gsub('_MA_07', '', pollut)) %>%
ggplot(aes(pollutant, OR)) +
geom_hline(yintercept = 1, color = 'red', linewidth = 1) +
geom_errorbar(aes(ymin = OR_CI_low, ymax = OR_CI_up), width = 0.25) +
geom_point(size = 4) +
labs(x = 'Pollutants', y = 'OR (95%)') +
theme_classic()
ts_city
estimate_meta
IQR_pollutant
ts_city
ts_city %>%
group_by(City)
ts_city %>%
group_by(City) %>%
summarise(admit_date_min = min(admit_date),
admit_date_max = max(admit_date),
obs_length = as.integer(max(admit_date) - min(admit_date))/365,
df = round(obs_length)*4)
ts_city %>%
group_by(City) %>%
summarise(admit_date_min = min(admit_date),
admit_date_max = max(admit_date),
obs_length = as.integer(max(admit_date) - min(admit_date))/365,
df = round(obs_length)*4) %>%
ungroup()
pacman::p_load(
arrow, dplyr, ggplot2, data.table, broom, survival, splines, purrr)
cco_pm = arrow::read_parquet(
'Data/cco_synthetic.parquet')
cco_pm
fit_clogit = function(x, tm_RH_lag = 'MA_07', data = cco_pm){
print(glue::glue('\n----------{x}; {tm_RH_lag}----------\n'))
iqr_x = IQR(data[[x]], na.rm = TRUE)
clean_fit = clogit(
formula = as.formula(paste0("case ~ ",
x,
' + ns(Temperature_',
tm_RH_lag,
', df = 5) + ns(RH_',
tm_RH_lag,
', df = 5)',
' + strata(id)')),
data = data) %>%
broom::tidy() %>%
mutate(OR = exp(estimate*iqr_x), 3,
OR_round = round(exp(estimate*iqr_x), 3),
CI_low = exp(estimate*iqr_x - 1.96*std.error*iqr_x),
CI_high = exp(estimate*iqr_x + 1.96*std.error*iqr_x),
CI_low_round = round(exp(estimate*iqr_x - 1.96*std.error*iqr_x), 3),
CI_high_round = round(exp(estimate*iqr_x + 1.96*std.error*iqr_x), 3),
predictor = x,
iqr = iqr_x,
tm_RH_lag = tm_RH_lag) %>%
mutate(result = paste0(format(OR_round, nsmall = 3),
' (',
format(CI_low_round, nsmall = 3),
'-',
format(CI_high_round, nsmall = 3),
')')) %>%
filter(predictor == term) %>%
mutate(result = gsub('000e\\+00| ', '', result)) %>%
select(predictor, term, iqr, result, OR, CI_low, CI_high, p.value)
return(clean_fit)
}
pm_cols = cco_pm %>%
select(starts_with('PM2.5')) %>%
names()
fit_cco = map_dfr(
pm_cols,
fit_clogit,
data = cco_pm)
fit_cco
View(fit_cco)
cco_pm
