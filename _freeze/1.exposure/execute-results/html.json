{
  "hash": "0de77da87250d2cd678cd35a771c9086",
  "result": {
    "markdown": "---\ntitle: \"环境暴露评估\"\n---\n\n\n环境暴露数据种类\n===============\n## 空气污染\n\n### CHAP\n\n[CHAP](https://weijing-rs.github.io/product.html) (ChinaHighAirPollutants)，由马里兰大学的研究院韦晶博士团队生成，使用数据免费，但需要跟韦博士签订协议，\n高质量的文章需要带韦博士为共同通讯作者。CHAP数据种类多，空间精度高（大部分为1*1km的空间精度和日均数据），包含的污染物包括：\n\n- PM$_{1}$ （1*1km，日均数据）2000-2021年\n- PM$_{2.5}$ （1*1km，日均数据）2000-2021年\n- PM$_{10}$ （1*1km，日均数据）2000-2021年\n- 臭氧（O$_3$）（1*1km，日均数据）2000年至今\n- 二氧化氮（NO$_2$）（10*10km，日均数据）2008年至今\n- 二氧化硫（SO$_2$）（10*10km，日均数据）2008年至今\n- 一氧化碳（CO）（10*10km，日均数据）2013年至今\n\n- 6种PM$_{2.5}$化学组分（1*1km，日均数据）2000年至今\n  - 黑碳（black carbon）\n  - 有机物（organic matter）\n  - 硫酸盐（sulphate, SO$_4^{2-}$）\n  - 硝酸盐（nitrate, NO$_3^-$）\n  - 铵盐（ammonium, NH$_4^+$）\n  - 氯化物（ammonium, Cl$^-$）\n- 16种环境多环芳烃（outdoor polycyclic aromatic hydrocarbons, PAHs）\n  * naphthalene (Nap)\n  * acenaphthene (Ace), \n  * acenaphthylene (Acy), \n  * fluorene (Flu), \n  * phenanthrene (Phe), \n  * anthracene (Ant), \n  * fluoranthene (Fla), \n  * pyrene (Pyr), \n  * benz[a]anthracene (BaA), \n  * chrysene (Chr), \n  * benzo[b]fluoranthene (BbF), \n  * benzo[k]fluoranthene (BkF), \n  * benzo[a]pyrene (BaP), \n  * dibenz[a,h]anthracene (DahA), \n  * benzo[ghi]perylene (BghiP) \n  * indeno[1,2,3-cd] pyrene (IcdP)\n\n\n### TAP\n\n[TAP](https://tapdata.org.cn/) (Tracking Air Pollution in China) 中国大气成分近实时追踪数据集，由清华大学的TAP团队开发。免费+开源，空间精度较低，现有10*10km的网格化数据产品，包含的污染物包括：\n\n- PM$_{2.5}$ （1*1km，日均数据）2000年至今\n- PM$_{2.5}$化学组分 （10*10km，日均数据）2000年至今\n  * 黑碳（black carbon）\n  * 有机物（organic matter）\n  * 硫酸盐（sulphate, SO$_4^{2-}$）\n  * 硝酸盐（nitrate, NO${_3^-}$）\n  * 铵盐（ammonium, NH$_4^+$）\n- 臭氧（O$_3$）（10*10km，日均数据）2013年至今\n\n## 温度\n\n\n## 绿植覆盖\n\n\n## 夜晚灯光\n\n\n环境暴露评估的时间窗口\n======================\n\n## 短期\n\n## 长期\n\n\n环境暴露评估方式\n================\n## 地区水平\n\n\n\n## 个体水平：\n\n### 个体文本地址转经纬度\n\n四川大学公共卫生学院的林小军教授开发的[amapR](https://github.com/xiaojunlin/amapR)，可使用高德地图API把具体的文本类型的地址转换成数值型的经纬度。\n\n\n### 根据经纬度的双线性插值暴露评估\n\n\n\nR代码及展示\n===========\n\n### 文本地址转经纬度R代码\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# devtools::install_github(\"xiaojunlin/amapR\") \nlibrary(amapR)\noptions(amap.key = 'xxxxxxxx')\ntest <- data.frame(n = 1:100, address = c(\"华中科技大学\", \"四川大学\"))\nresult <- geocoord(data = test, address = \"address\")\n```\n:::\n\n\n\n### 双线性插值\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(dplyr, raster, data.table, arrow, ggplot2, lubridate)\n\nexposure = read_parquet('Data/exposure_grids.parquet', as_data_frame = T) %>% \n  mutate(longitude = round(longitude, 2),\n         latitude = round(latitude, 2))\n\nexposure\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 252 × 9\n   longitude latitude date       PM2.5   SO4   NO3   NH4    OM    BC\n       <dbl>    <dbl> <date>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1      110.     22.0 2014-01-01   120  21.1  31.1  20.3  31.9  5.95\n 2      110.     22.0 2014-01-02   123  26.2  29.5  24.0  29.0  5.01\n 3      110.     22.0 2014-01-03   128  30.3  28.5  23.7  30.2  5.70\n 4      110.     22.0 2014-01-04   138  23.5  29.9  22.7  43.1  8.82\n 5      110.     22.0 2014-01-05   142  24.6  32.0  23.0  43.0  8.15\n 6      110.     22.0 2014-01-06   108  25.8  17.4  15.8  32.7  6.57\n 7      110.     22.0 2014-01-07    79  18.9  11.0  10.6  25.0  5.75\n 8      110.     22.0 2014-01-01   119  21.2  30.8  20.0  31.5  5.92\n 9      110.     22.0 2014-01-02   122  25.6  29.4  24.2  28.7  5.02\n10      110.     22.0 2014-01-03   117  27.7  25.9  22.0  27.4  5.13\n# ℹ 242 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nindividual = data.frame(\n  longitude = c(110.08, 110.01, 110.15, 110.02, 110.18, \n                110.14, 110.058, 110.01, 110.15, 110.15), \n  latitude  = c(22.12, 22.20, 22.21, 22.27, 22.15, \n                22.23, 22.29, 22.25, 22.17, 22.29))\n\nindividual\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   longitude latitude\n1    110.080    22.12\n2    110.010    22.20\n3    110.150    22.21\n4    110.020    22.27\n5    110.180    22.15\n6    110.140    22.23\n7    110.058    22.29\n8    110.010    22.25\n9    110.150    22.17\n10   110.150    22.29\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  \n  geom_tile(data = exposure %>% \n              filter(date == ymd('2014-01-03')), \n            aes(x = longitude, y = latitude, fill = PM2.5), alpha = 0.9) +\n  geom_point(data = individual, aes(x = longitude, y = latitude), \n             color = 'black', size = 3) +\n  scale_fill_gradient(low = '#fdd49e', high = '#7f0000') +\n  theme_test() +\n  coord_equal()\n```\n\n::: {.cell-output-display}\n![](1.exposure_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n创造逐日的各污染物数据\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexposure_PM2.5 = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, PM2.5) %>% \n  rasterFromXYZ()\n\nexposure_SO4 = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, SO4) %>% \n  rasterFromXYZ()\n\nexposure_NO3 = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, NO3) %>% \n  rasterFromXYZ()\n\nexposure_NH4 = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, NH4) %>% \n  rasterFromXYZ()\n\nexposure_OM = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, OM) %>% \n  rasterFromXYZ()\n\nexposure_BC = exposure %>% \n  filter(date == ymd('2014-01-03')) %>% \n  dplyr::select(longitude, latitude, BC) %>% \n  rasterFromXYZ()\n\nexposure_BC\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nclass      : RasterLayer \ndimensions : 6, 6, 36  (nrow, ncol, ncell)\nresolution : 0.1, 0.1  (x, y)\nextent     : 109.8, 110.4, 21.9, 22.5  (xmin, xmax, ymin, ymax)\ncrs        : NA \nsource     : memory\nnames      : BC \nvalues     : 4.45, 7.15  (min, max)\n```\n:::\n:::\n\n\n用`raster::extract()`函数进行双线性插值污染物评估\n\n\n::: {.cell}\n\n```{.r .cell-code}\neval_pollutant = individual %>% \n  mutate(\n    PM2.5 = raster::extract(\n      exposure_PM2.5,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"),\n    SO4 = raster::extract(\n      exposure_SO4,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"),\n    NO3 = raster::extract(\n      exposure_NO3,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"),\n    NH4 = raster::extract(\n      exposure_NH4,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"),\n    OM = raster::extract(\n      exposure_OM,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"),\n    BC = raster::extract(\n      exposure_BC,\n      individual[,c('longitude', 'latitude')],\n      method = \"bilinear\"))\n\neval_pollutant\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   longitude latitude   PM2.5     SO4      NO3      NH4       OM      BC\n1    110.080    22.12 120.150 26.8370 27.00720 22.61350 28.59970 5.29940\n2    110.010    22.20 124.000 27.2450 28.14700 23.35500 29.50200 5.36700\n3    110.150    22.21 122.400 26.5660 28.80400 22.79400 28.75000 4.82200\n4    110.020    22.27 122.700 26.7076 28.37780 22.86780 29.10480 5.06060\n5    110.180    22.15 122.100 27.2320 27.42400 22.90800 29.04700 5.35900\n6    110.140    22.23 121.820 26.2888 29.01320 22.64500 28.48460 4.66500\n7    110.058    22.29 121.056 26.1756 28.49144 22.49096 28.49296 4.73488\n8    110.010    22.25 123.600 27.0420 28.35000 23.07400 29.37600 5.24400\n9    110.150    22.17 122.800 27.0420 28.06800 22.93800 29.15000 5.19400\n10   110.150    22.29 124.000 26.4700 29.98000 23.05400 28.82600 4.53800\n```\n:::\n:::\n",
    "supporting": [
      "1.exposure_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}