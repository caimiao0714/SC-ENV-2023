{
  "hash": "80a3b8e328f91ebdeffdd159b9c62169",
  "result": {
    "markdown": "---\ntitle: \"时间分层的病例交叉研究\"\nlinkcolor: '#08519c'\nnavbar: right\n---\n\n\n# 文献实例\n\n- Chen, R., Jiang, Y., Hu, J., Chen, H., Li, H., Meng, X., ... & Kan, H. (2022). Hourly air pollutants and acute coronary syndrome onset in 1.29 million patients. ***Circulation*** ([IF=39.9]{style=\"color:#9A0000;font-weight: bold;\"}), 145(24), 1749-1760. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Chen_2022_Circulation.pdf) \n\n- Liu, Y., Pan, J., Fan, C., Xu, R., Wang, Y., Xu, C., ... & Zhang, L. (2021). Short-term exposure to ambient air pollution and mortality from myocardial infarction. ***Journal of the American College of Cardiology*** ([IF=27.2]{style=\"color:#9A0000;font-weight: bold;\"}), 77(3), 271-281. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Liu_2021_JACC_time_stratified_case_crossover.pdf) \n\n- **Cai, M.**, Wei, J., Zhang, S., Liu, W., Wang, L., Qian, Z., Lin, H., Liu, E., McMillin, S.E., Cao, Y., Yin, P. (2023). Short-term air pollution exposure associated with death from kidney diseases: a nationwide time-stratified case-crossover study in China from 2015 to 2019. ***BMC Medicine*** ([IF=11.8]{style=\"color:#9A0000;font-weight: bold;\"}), 21(1), 32. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/2023_1_BMC_Med_Air_pollution_kidney_death.pdf) \n\n\n\n\n# R语言代码实战\n\n## 数据读取\n\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-1_d381def1f0707e1b11da3b1a1df481d9'}\n\n```{.r .cell-code}\npacman::p_load(\n  arrow, dplyr, ggplot2, data.table, broom, survival, splines, purrr, latex2exp, patchwork, tableone, lubridate)\n\ncco_pm = arrow::read_parquet(\n  'Data/cco_synthetic.parquet') %>% \n  mutate(id = as.integer(id))\n\nglimpse(cco_pm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 36,393\nColumns: 13\n$ id                <int> 8, 8, 8, 8, 18, 18, 18, 18, 21, 21, 21, 21, 21, 30, …\n$ case              <dbl> 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0…\n$ date_control      <date> 2015-07-04, 2015-07-11, 2015-07-18, 2015-07-25, 201…\n$ date_event        <dttm> 2015-07-18, 2015-07-18, 2015-07-18, 2015-07-18, 201…\n$ Temperature_MA_07 <dbl> 25.157479, 26.654723, 27.834193, 26.476728, 5.590609…\n$ RH_MA_07          <dbl> 56.29268, 56.55889, 63.31046, 78.44241, 39.37510, 41…\n$ PM2.5_MA_01       <dbl> 49.64125, 71.13610, 59.45812, 61.66376, 42.55674, 63…\n$ PM2.5_MA_02       <dbl> 51.20873, 69.57587, 61.56069, 61.54747, 51.69360, 72…\n$ PM2.5_MA_03       <dbl> 52.53419, 69.62826, 62.17871, 60.31168, 59.29741, 81…\n$ PM2.5_MA_04       <dbl> 50.22526, 69.04128, 62.92857, 60.95178, 63.24530, 82…\n$ PM2.5_MA_05       <dbl> 50.45423, 67.57404, 64.49090, 61.53650, 65.97250, 85…\n$ PM2.5_MA_06       <dbl> 54.99141, 65.71766, 65.11285, 61.19540, 74.70118, 84…\n$ PM2.5_MA_07       <dbl> 57.36381, 64.22242, 65.32272, 60.85549, 81.05209, 79…\n```\n:::\n\n```{.r .cell-code}\ncco_pm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           id case date_control date_event Temperature_MA_07 RH_MA_07\n    1:      8    0   2015-07-04 2015-07-18         25.157479 56.29268\n    2:      8    0   2015-07-11 2015-07-18         26.654723 56.55889\n    3:      8    1   2015-07-18 2015-07-18         27.834193 63.31046\n    4:      8    0   2015-07-25 2015-07-18         26.476728 78.44241\n    5:     18    1   2015-03-04 2015-03-04          5.590609 39.37510\n   ---                                                               \n36389: 101967    0   2019-05-28 2019-05-21         23.694810 43.10004\n36390: 101975    0   2019-10-06 2019-10-27         18.622571 56.82667\n36391: 101975    0   2019-10-13 2019-10-27         15.517046 74.24209\n36392: 101975    0   2019-10-20 2019-10-27         13.168067 62.80148\n36393: 101975    1   2019-10-27 2019-10-27         13.901184 61.54964\n       PM2.5_MA_01 PM2.5_MA_02 PM2.5_MA_03 PM2.5_MA_04 PM2.5_MA_05 PM2.5_MA_06\n    1:    49.64125    51.20873    52.53419    50.22526    50.45423    54.99141\n    2:    71.13610    69.57587    69.62826    69.04128    67.57404    65.71766\n    3:    59.45812    61.56069    62.17871    62.92857    64.49090    65.11285\n    4:    61.66376    61.54747    60.31168    60.95178    61.53650    61.19540\n    5:    42.55674    51.69360    59.29741    63.24530    65.97250    74.70118\n   ---                                                                        \n36389:    24.23324    29.30652    33.04356    33.84328    34.94796    35.59586\n36390:    22.31457    29.18031    32.21481    33.99911    35.63098    37.01669\n36391:    35.99716    34.55549    32.92004    37.70209    39.71017    39.65420\n36392:    78.43440    80.46264    77.49954    73.02039    65.72646    59.30752\n36393:    50.84817    44.64038    54.94739    60.00659    63.58455    65.79182\n       PM2.5_MA_07\n    1:    57.36381\n    2:    64.22242\n    3:    65.32272\n    4:    60.85549\n    5:    81.05209\n   ---            \n36389:    35.43058\n36390:    38.24265\n36391:    38.10932\n36392:    56.35800\n36393:    66.64737\n```\n:::\n:::\n\n\n## 创建时间分层的数据\n\n\n::: {.cell}\n\n```{.r .cell-code}\noriginal_data = cco_pm %>% \n  filter(case == 1) %>% \n  select(id, date_event)\n\noriginal_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          id date_event\n   1:      8 2015-07-18\n   2:     18 2015-03-04\n   3:     21 2015-01-29\n   4:     30 2015-01-13\n   5:     32 2015-06-12\n  ---                  \n8276: 101900 2019-07-02\n8277: 101948 2019-05-26\n8278: 101955 2019-10-07\n8279: 101967 2019-05-21\n8280: 101975 2019-10-27\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndstrata = data.table(\n    date_control = ymd(as.IDate(as.Date(min(original_data$date_event)):\n                                  as.Date(max(original_data$date_event))))) %>% \n    .[,`:=`(strata_id = paste0(\n      year(date_control),\n      stringr::str_pad(month(date_control), width = 2, side = 'left', pad = '0'),\n      '0',\n      wday(date_control)))]\n  \n# Create controls for each case\ncase_control = original_data %>%\n  .[, `:=`(strata_id = paste0(\n    year(date_event),\n    stringr::str_pad(\n      month(date_event),\n      width = 2,\n      side = 'left',\n      pad = '0'\n    ),\n    '0',\n    wday(date_event)\n  ))] %>%\n  merge(dstrata,\n        by = 'strata_id',\n        all.x = TRUE,\n        allow.cartesian = TRUE) %>%\n  select(-strata_id) %>% \n  setkey(id, date_control)\n\ncase_control\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           id date_event date_control\n    1:      8 2015-07-18   2015-07-04\n    2:      8 2015-07-18   2015-07-11\n    3:      8 2015-07-18   2015-07-18\n    4:      8 2015-07-18   2015-07-25\n    5:     18 2015-03-04   2015-03-04\n   ---                               \n36389: 101967 2019-05-21   2019-05-28\n36390: 101975 2019-10-27   2019-10-06\n36391: 101975 2019-10-27   2019-10-13\n36392: 101975 2019-10-27   2019-10-20\n36393: 101975 2019-10-27   2019-10-27\n```\n:::\n:::\n\n\n检查生成的数据框是否一致\n\n\n::: {.cell}\n\n```{.r .cell-code}\nidentical(\n  cco_pm[,.(id, date_event, date_control)] %>% \n    setkey(id, date_control), \n  case_control)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\n\n\n## 描述性统计\n\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-5_dffc01fe70081e97c2085eb28fa9a9ad'}\n\n```{.r .cell-code}\nvar_vec = c(\"Temperature_MA_07\", \n\"RH_MA_07\", \"PM2.5_MA_01\", \"PM2.5_MA_02\", \"PM2.5_MA_03\", \"PM2.5_MA_04\", \n\"PM2.5_MA_05\", \"PM2.5_MA_06\", \"PM2.5_MA_07\")\n\ntab1 = cco_pm %>% \n  CreateTableOne(\n    vars = var_vec, \n    #factorVars = fact_var,\n    strata = 'case', \n    addOverall = TRUE) %>% \n  print(formatOptions = list(big.mark = \",\"),\n        missing = TRUE,\n        catDigits = 2,\n        contDigits = 2,\n        showAllLevels = TRUE,\n        printToggle = FALSE) %>% \n    as.data.frame() %>% \n    setDT(x = ., keep.rownames = 'variables') %>% \n    dplyr::select(-test)\n\ntab1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                        variables level        Overall              0\n 1:                             n               36,393         28,113\n 2: Temperature_MA_07 (mean (SD))         14.83 (9.82)   14.86 (9.81)\n 3:          RH_MA_07 (mean (SD))        68.83 (15.65)  68.86 (15.64)\n 4:       PM2.5_MA_01 (mean (SD))        44.05 (29.72)  43.95 (29.63)\n 5:       PM2.5_MA_02 (mean (SD))        44.09 (28.82)  44.01 (28.67)\n 6:       PM2.5_MA_03 (mean (SD))        44.11 (28.13)  44.04 (28.02)\n 7:       PM2.5_MA_04 (mean (SD))        44.13 (27.52)  44.05 (27.42)\n 8:       PM2.5_MA_05 (mean (SD))        44.11 (27.01)  44.04 (26.91)\n 9:       PM2.5_MA_06 (mean (SD))        44.09 (26.62)  44.03 (26.52)\n10:       PM2.5_MA_07 (mean (SD))        44.10 (26.31)  44.03 (26.22)\n                1      p Missing\n 1:         8,280               \n 2:  14.73 (9.84)  0.310     0.0\n 3: 68.70 (15.68)  0.391     0.0\n 4: 44.38 (30.03)  0.254     0.0\n 5: 44.36 (29.31)  0.324     0.0\n 6: 44.36 (28.51)  0.367     0.0\n 7: 44.37 (27.87)  0.358     0.0\n 8: 44.35 (27.35)  0.364     0.0\n 9: 44.32 (26.94)  0.375     0.0\n10: 44.31 (26.63)  0.391     0.0\n```\n:::\n:::\n\n\n\n\n\n## 统计建模-条件逻辑回归\n\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-6_ca77e5f54417b52fb13ad7fb57a2accf'}\n\n```{.r .cell-code}\nfit_clogit = function(x, tm_RH_lag = 'MA_07', data = cco_pm){\n  print(glue::glue('\\n----------{x}; {tm_RH_lag}----------\\n'))\n  iqr_x = IQR(data[[x]], na.rm = TRUE)\n  \n  clean_fit = clogit(\n    formula = as.formula(paste0(\"case ~ \", \n                    x, \n                    ' + ns(Temperature_',\n                    tm_RH_lag,\n                    ', df = 5) + ns(RH_',\n                    tm_RH_lag,\n                    ', df = 5)',\n                    ' + strata(id)')),\n    data = data,\n    method = 'approximate') %>% \n    broom::tidy() %>% \n    mutate(OR = exp(estimate*iqr_x), 3,\n           OR_round = round(exp(estimate*iqr_x), 3),\n           CI_low = exp(estimate*iqr_x - 1.96*std.error*iqr_x),\n           CI_high = exp(estimate*iqr_x + 1.96*std.error*iqr_x),\n           CI_low_round = round(exp(estimate*iqr_x - 1.96*std.error*iqr_x), 3),\n           CI_high_round = round(exp(estimate*iqr_x + 1.96*std.error*iqr_x), 3),\n           predictor = x,\n           iqr = iqr_x,\n           tm_RH_lag = tm_RH_lag) %>% \n    mutate(result = paste0(format(OR_round, nsmall = 3), \n                           ' (', \n                           format(CI_low_round, nsmall = 3), \n                           '-', \n                           format(CI_high_round, nsmall = 3),\n                           ')')) %>% \n    filter(predictor == term) %>% \n    mutate(result = gsub('000e\\\\+00| ', '', result)) %>% \n    select(predictor, term, iqr, result, OR, CI_low, CI_high, p.value)\n  \n  return(clean_fit)\n}\n\npm_cols = cco_pm %>% \n  select(starts_with('PM2.5')) %>% \n  names()\n\npm_cols\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"PM2.5_MA_01\" \"PM2.5_MA_02\" \"PM2.5_MA_03\" \"PM2.5_MA_04\" \"PM2.5_MA_05\"\n[6] \"PM2.5_MA_06\" \"PM2.5_MA_07\"\n```\n:::\n:::\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-7_3a1ec4036078718c76868013fd6a1850'}\n\n```{.r .cell-code}\nfit_cco = map_dfr(\n  pm_cols,\n  fit_clogit,\n  data = cco_pm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n----------PM2.5_MA_01; MA_07----------\n----------PM2.5_MA_02; MA_07----------\n----------PM2.5_MA_03; MA_07----------\n----------PM2.5_MA_04; MA_07----------\n----------PM2.5_MA_05; MA_07----------\n----------PM2.5_MA_06; MA_07----------\n----------PM2.5_MA_07; MA_07----------\n```\n:::\n\n```{.r .cell-code}\nfit_cco \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 8\n  predictor   term          iqr result                OR CI_low CI_high p.value\n  <chr>       <chr>       <dbl> <chr>              <dbl>  <dbl>   <dbl>   <dbl>\n1 PM2.5_MA_01 PM2.5_MA_01  29.4 1.023(0.984-1.063)  1.02  0.984    1.06   0.249\n2 PM2.5_MA_02 PM2.5_MA_02  29.2 1.022(0.980-1.065)  1.02  0.980    1.07   0.318\n3 PM2.5_MA_03 PM2.5_MA_03  29.0 1.023(0.978-1.070)  1.02  0.978    1.07   0.324\n4 PM2.5_MA_04 PM2.5_MA_04  28.8 1.029(0.980-1.080)  1.03  0.980    1.08   0.249\n5 PM2.5_MA_05 PM2.5_MA_05  28.7 1.035(0.983-1.090)  1.04  0.983    1.09   0.194\n6 PM2.5_MA_06 PM2.5_MA_06  28.7 1.040(0.983-1.099)  1.04  0.983    1.10   0.172\n7 PM2.5_MA_07 PM2.5_MA_07  28.6 1.042(0.982-1.106)  1.04  0.982    1.11   0.175\n```\n:::\n:::\n\n\n## 暴露反应关系曲线\n\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-8_c6e2903aa7ec34fc18223ba5b8aa3cac'}\n\n```{.r .cell-code}\ncco_pm[,quantile(PM2.5_MA_01, c(0.25, 0.5, 0.75))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     25%      50%      75% \n24.85516 36.29862 54.21549 \n```\n:::\n\n```{.r .cell-code}\nfit_pm1 = clogit(\n  case ~ ns(PM2.5_MA_01, df = 4, knots = c(24.85516, 36.29862, 54.21549)) + \n    ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5) + strata(id),\n  data = cco_pm) \n\nsp_pm1 = fit_pm1 %>%\n  termplot(se = T, plot = F) %>%\n  .[['PM2.5_MA_01']] %>%\n  as.data.table() %>% \n  .[,`:=`(HR = exp(y),\n          HRmin = exp(y - 1.96*se),\n          HRmax = exp(y + 1.96*se))] %>% \n  .[, `:=`(pollutant = 'PM2.5')] %>% \n  .[]\n\nsp_pm1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                  x            y        se        HR     HRmin    HRmax\n    1:   0.01227085  0.042335668 0.2042817 1.0432446 0.6990336 1.556948\n    2:   0.01321473  0.042334044 0.2042703 1.0432429 0.6990480 1.556911\n    3:   0.01686711  0.042327760 0.2042264 1.0432364 0.6991039 1.556767\n    4:   0.01824977  0.042325381 0.2042097 1.0432339 0.6991251 1.556713\n    5:   0.03312462  0.042299789 0.2040306 1.0432072 0.6993527 1.556126\n   ---                                                                 \n36342: 364.39734347  0.015824585 0.4892802 1.0159505 0.3893936 2.650673\n36343: 372.32051222  0.006956253 0.5136792 1.0069805 0.3679328 2.755964\n36344: 382.24794690 -0.004490001 0.5447729 0.9955201 0.3422394 2.895810\n36345: 395.03642367 -0.019732329 0.5856061 0.9804611 0.3111375 3.089643\n36346: 482.52457202 -0.133471700 0.8801825 0.8750522 0.1558861 4.912024\n       pollutant\n    1:     PM2.5\n    2:     PM2.5\n    3:     PM2.5\n    4:     PM2.5\n    5:     PM2.5\n   ---          \n36342:     PM2.5\n36343:     PM2.5\n36344:     PM2.5\n36345:     PM2.5\n36346:     PM2.5\n```\n:::\n:::\n\n::: {.cell hash='3.cco_cache/html/unnamed-chunk-9_fb9707ac7173b006e798deaff564b187'}\n\n```{.r .cell-code}\narr = list('PM1' = TeX(\"PM$_{1}$\"),  \n           \"PM2.5\" = TeX(\"PM$_{2.5}$\"), \n           \"PM10\" = TeX(\"PM$_{10}$\"))\nmylabel = function(val) { return(lapply(val, function(x) arr[x])) }\ncco_pm[,quantile(PM2.5_MA_01, c(0.01, 0.99))]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1%        99% \n  7.021625 154.188829 \n```\n:::\n\n```{.r .cell-code}\ncolor7 = c('#7570b3', '#d95f02', '#1b9e77')\n\np_pm1 = sp_pm1 %>% \n  .[x >= 7 & x <= 154] %>% \n  .[sample(.N, 1000)] %>% \n  ggplot(aes(x = x, y = HR)) +\n  geom_hline(yintercept = 1, linewidth = 0.8, alpha = 0.6, linetype = 'dashed') +\n  geom_ribbon(aes(ymin = HRmin, ymax = HRmax), alpha = 0.3, color = NA, fill = color7[1]) +\n  geom_line(linewidth = 1.5, color = color7[1]) +\n  facet_wrap(~ pollutant, scales = 'free', labeller = mylabel) +\n  scale_x_continuous(expand = c(0, 0)) +\n  scale_y_continuous(expand = c(0, 0.05)) +\n  labs(x = NULL, y = 'Odds of death') +\n  theme_test(base_size = 20, base_family = 'serif') + # , base_family = 'serif'\n  theme(plot.margin = unit(c(0, 0.5, 0, 0.2), 'cm'),\n        plot.title = element_text(size = 20, face = 'bold'),\n        strip.background = element_rect(fill = ggplot2::alpha(color7[1], 0.3), color = NA),\n        strip.text = element_text(size = 18, face = 'bold'))\n\np_pm1\n```\n\n::: {.cell-output-display}\n![](3.cco_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggsave('cco_splines.pdf', p_pm1, width = 8, height = 6, device = cairo_pdf)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}