{
  "hash": "5144d3874bea3eae8fec952bf6ebcb8d",
  "result": {
    "markdown": "---\ntitle: \"时间序列研究\"\nlinkcolor: '#08519c'\nnavbar: right\n---\n\n\n# 研究设计\n\n## 背景与参考文献\n\n- Chen, R., Yin, P., Meng, X., Liu, C., Wang, L., Xu, X., ... & Zhou, M. (2017). Fine particulate air pollution and daily mortality. A nationwide analysis in 272 Chinese cities. ***American journal of Respiratory and Critical Care Medicine***, 196(1), 73-81.\n\n- Chen, R., Yin, P., Wang, L., Liu, C., Niu, Y., Wang, W., ... & Zhou, M. (2018). Association between ambient temperature and mortality risk and burden: time series study in 272 main Chinese cities. ***BMJ***, 363.\n\n- Liu, C., Chen, R., Sera, F., Vicedo-Cabrera, A. M., Guo, Y., Tong, S., ... & Kan, H. (2019). Ambient particulate air pollution and daily mortality in 652 cities. ***New England Journal of Medicine***, 381(8), 705-715. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Liu_2019_NEJM.pdf) \n\n- Chen, G., Guo, Y., Yue, X., Tong, S., Gasparrini, A., Bell, M. L., ... & Li, S. (2021). Mortality risk attributable to wildfire-related PM2· 5 pollution: a global time series study in 749 locations. ***The Lancet Planetary Health***, 5(9), e579-e587.\n\n- Wang, X., Leng, M., Liu, Y., Qian, Z. M., Zhang, J., Li, Z., ... & Lin, H. (2021). Different sized particles associated with all-cause and cause-specific emergency ambulance calls: a multicity time-series analysis in China. ***Science of The Total Environment***, 783, 147060.\n\n## 模型\n\n两阶段模型法 \n\n### 第一阶段：广义加性线性模型\n\n广义加性线性模型（generalized additive model）：\n\n- 计数型因变量（如发病人数）--> 类泊松连接函数\n- 连续型因变量（如YLL ） --> 高斯连接函数\n\n$$\\log E(Y_t) = \\alpha + \\beta_0 \\times\\text{PM}_{2.5} \\\\\n+ \\beta_1 \\times\\text{day of week}\\\\\n+ \\beta_2 \\times\\text{public holidays}\\\\\ns(t, \\text{df} = \\frac{6}{\\text{year}}) \\\\\n+ s(\\text{temperature}, \\text{df} = 6)\\\\ \n+ s(\\text{relative humidity}, \\text{df} = 6) $$\n\n### 第二阶段：随机效应模型meta回归\n\nI$^2$统计量用来评价不同城市间的异质性。\n\n\n\n# 文献实例\n\n- Liu, C., Chen, R., Sera, F., Vicedo-Cabrera, A. M., Guo, Y., Tong, S., ... & Kan, H. (2019). Ambient particulate air pollution and daily mortality in 652 cities. ***New England Journal of Medicine***, 381(8), 705-715. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Liu_2019_NEJM.pdf)\n\n\n\n# R语言代码实战\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(lubridate, glue, tidyr, purrr, broom, mgcv, dplyr, data.table, \n               fst, ggplot2)\n\nfit_ts_sep = function(pm_components, df_date, y, dat){\n  \n  fit_model = glue('{y} ~ {pm_components} +\n                    s(admit_date_int, k = {df_date}, fx = T, bs = \"cr\") +\n                    dow + s(Temperature_MA_07, k = 6) +\n                    s(RH_MA_07, k = 6)') %>%\n    as.formula() %>%\n    gam(family = quasipoisson(link = \"log\"),\n        scale = -1,\n        control = gam.control(epsilon = 0.0000001,\n                              maxit = 1000),\n        na.action = na.omit,\n        data = dat)\n  \n  coef_vec = summary(fit_model)$p.coeff\n  se_vec = summary(fit_model)$se\n  pval_vec = summary(fit_model)$p.pv\n  \n  coef_point = coef_vec[names(coef_vec) == pm_components]\n  se_point = se_vec[names(se_vec) == pm_components]\n  pval_point = pval_vec[names(pval_vec) == pm_components]\n  \n  ER = (exp(coef_point) - 1)*100\n  CI_lower = (exp(coef_point - 1.96*se_point) - 1)*100\n  CI_upper = (exp(coef_point + 1.96*se_point) - 1)*100\n  \n  ER_95CI = glue(\"{formatC(round(ER, 2), format = 'f', digits = 2)} \",\n                 \"({formatC(round(CI_lower, 2), format = 'f', digits = 2)} to \",\n                 \"{formatC(round(CI_upper, 2), format = 'f', digits = 2)})\")\n  \n  output = data.table(\n    pm_components = pm_components, \n    #pm_component_IQR = formatC(round(IQR_range, 2), format = 'f', digits = 2), \n    n = dat[,.N],\n    ER_95CI = ER_95CI,\n    ER = ER, \n    CI_lower = CI_lower, \n    CI_upper = CI_upper, \n    p_value = pval_point,\n    log_OR = coef_point, \n    log_OR_se = se_point)\n  \n  return(output)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npollutant_vec7 = c(\n  \"PM2.5_MA_07\", \"SO4_MA_07\", \"NO3_MA_07\", \"NH4_MA_07\", \"OM_MA_07\", \"BC_MA_07\")\n\n\nIQR_pollutant_county = map_dfr(\n  pollutant_vec7,\n  ~data.table(pollutant = .x, \n              IQR = IQR(d_sub1[[.x]], na.rm = TRUE)))\n\nprov_county_obs_length = d_sub1 %>% \n  group_by(Province_CN, Province, City_code, City, County, Cnty_code) %>% \n  summarise(admit_date_min = min(admit_date),\n            admit_date_max = max(admit_date),\n            obs_length = as.integer(max(admit_date) - min(admit_date))/365,\n            df = round(obs_length)*6) %>% \n  ungroup()\n\n\nmap_city = function(dat, y, df_date, county_id){\n  \n  #pb$tick()$print()\n  df_date_vector = rep(df_date, length(pollutant_vec7))\n  \n  res = map2_dfr(pollutant_vec7, df_date, .f = fit_ts_sep, dat = dat, y = y)\n  \n  fwrite(res, glue('Results/{y}_{county_id}.csv'))\n  \n  return(res)\n}\n\nest_prov_county = d_sub1 %>% \n  .[,N_obs := .N,.(Cnty_code)] %>% \n  filter(!is.na(BC_MA_07) & !is.na(Temperature_MA_07) & N_obs > 100) %>% \n  mutate(across(PM2.5_MA_07:BC_MA_07, ~.x/IQR(.x))) %>% \n  group_by(Province_CN, Province, City_code, City, County, Cnty_code) %>% \n  nest() %>%\n  left_join(prov_county_obs_length %>% \n              dplyr::select(Cnty_code, df),\n            by = 'Cnty_code') %>% \n\t\t\t#filter(Cnty_code == 140105) %>%\n  mutate(#hospitallevel_tertiary = pmap(.l = list(data, df, Cnty_code), \n         #                              .f = map_city, \n         #                              y = 'hospitallevel_tertiary'),\n         hospitallevel_secondary = pmap(.l = list(data, df, Cnty_code), \n                                        .f = map_city, \n                                        y = 'hospitallevel_secondary'))\n\n\nres_county_sub = est_prov_county %>% \n  dplyr::select(-data)\n```\n:::\n",
    "supporting": [
      "2.ts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}