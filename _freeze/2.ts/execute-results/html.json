{
  "hash": "31260cf4dca670d74d15e633832d6d83",
  "result": {
    "markdown": "---\ntitle: \"时间序列研究\"\nlinkcolor: '#08519c'\nnavbar: right\n---\n\n\n# 研究设计\n\n## 背景与参考文献\n\n- Liu, C., Chen, R., Sera, F., Vicedo-Cabrera, A. M., Guo, Y., Tong, S., ... & Kan, H. (2019). Ambient particulate air pollution and daily mortality in 652 cities. ***New England Journal of Medicine*** ([IF=176]{style=\"color:#9A0000;font-weight: bold;\"}), 381(8), 705-715. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Liu_2019_NEJM.pdf) \n\n- Chen, G., Guo, Y., Yue, X., Tong, S., Gasparrini, A., Bell, M. L., ... & Li, S. (2021). Mortality risk attributable to wildfire-related PM$_{2.5}$ pollution: a global time series study in 749 locations. ***The Lancet Planetary Health*** ([IF=29]{style=\"color:#9A0000;font-weight: bold;\"}), 5(9), e579-e587. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Chen_2021_Lancet_Planetary_Health_wildfire.pdf) \n\n- Chen, R., Yin, P., Wang, L., Liu, C., Niu, Y., Wang, W., ... & Zhou, M. (2018). Association between ambient temperature and mortality risk and burden: time series study in 272 main Chinese cities. ***BMJ*** ([IF=93]{style=\"color:#9A0000;font-weight: bold;\"}), 363.\n\n- Chen, R., Yin, P., Meng, X., Liu, C., Wang, L., Xu, X., ... & Zhou, M. (2017). Fine particulate air pollution and daily mortality. A nationwide analysis in 272 Chinese cities. ***American journal of Respiratory and Critical Care Medicine*** ([IF=31]{style=\"color:#9A0000;font-weight: bold;\"}), 196(1), 73-81.\n\n\n\n## 模型\n\n两阶段模型法 \n\n### 第一阶段：广义加性线性模型\n\n广义加性线性模型（generalized additive model）：\n\n- 计数型因变量（如发病人数）--> 类泊松连接函数\n- 连续型因变量（如YLL ） --> 高斯连接函数\n\n$$\\log E(Y_t) = \\alpha + \\beta_0 \\times\\text{PM}_{2.5} \\\\\n+ \\beta_1 \\times\\text{day of week}\\\\\n+ \\beta_2 \\times\\text{public holidays}\\\\\ns(t, \\text{df} = \\frac{6}{\\text{year}}) \\\\\n+ s(\\text{temperature}, \\text{df} = 6)\\\\ \n+ s(\\text{relative humidity}, \\text{df} = 6) $$\n\n### 第二阶段：随机效应模型meta回归\n\nI$^2$统计量用来评价不同城市间的异质性。\n\n\n\n# 文献实例\n\n- Liu, C., Chen, R., Sera, F., Vicedo-Cabrera, A. M., Guo, Y., Tong, S., ... & Kan, H. (2019). Ambient particulate air pollution and daily mortality in 652 cities. ***New England Journal of Medicine***, 381(8), 705-715. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Liu_2019_NEJM.pdf)\n\n\n- Chen, G., Guo, Y., Yue, X., Tong, S., Gasparrini, A., Bell, M. L., ... & Li, S. (2021). Mortality risk attributable to wildfire-related PM$_{2.5}$ pollution: a global time series study in 749 locations. ***The Lancet Planetary Health*** ([IF=29]{style=\"color:#9A0000;font-weight: bold;\"}), 5(9), e579-e587. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Chen_2021_Lancet_Planetary_Health_wildfire.pdf) \n\n- Jiang, Y., Huang, J., Li, G., Wang, W., Wang, K., Wang, J., ... & Wu, S. (2023). Ozone pollution and hospital admissions for cardiovascular events. European Heart Journal, ehad091. DOI: [10.1093/eurheartj/ehad091](https://doi.org/10.1093/eurheartj/ehad091) \n\n# R语言代码实战\n\n## 数据读取与检查\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(lubridate, glue, tidyr, purrr, broom, mgcv, dplyr, data.table, ggplot2)\n\nts_city = arrow::read_parquet('Data/ts_synthetic.parquet') %>% \n  mutate(admit_date_int = as.integer(admit_date))\n\nglimpse(ts_city)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 22,958\nColumns: 13\n$ City              <chr> \"city_01\", \"city_01\", \"city_01\", \"city_01\", \"city_01…\n$ admit_date        <date> 2014-01-01, 2014-01-02, 2014-01-03, 2014-01-04, 201…\n$ N                 <int> 71, 30, 53, 37, 33, 27, 26, 41, 46, 38, 30, 30, 40, …\n$ PM2.5_MA_07       <dbl> 43.48810, 47.60833, 53.47381, 59.12381, 61.48333, 62…\n$ SO4_MA_07         <dbl> 8.103643, 8.859619, 9.862833, 10.802631, 10.981190, …\n$ NO3_MA_07         <dbl> 11.321107, 12.452488, 14.035452, 15.446714, 15.80534…\n$ NH4_MA_07         <dbl> 7.374893, 8.115286, 9.126012, 10.078940, 10.428202, …\n$ OM_MA_07          <dbl> 10.740298, 11.796440, 13.649619, 15.619893, 16.65766…\n$ BC_MA_07          <dbl> 1.664417, 1.873250, 2.214726, 2.557393, 2.782690, 2.…\n$ Temperature_MA_07 <dbl> 8.647635, 8.697264, 9.145584, 9.433634, 9.423733, 10…\n$ RH_MA_07          <dbl> 75.89122, 74.89766, 76.77965, 79.10466, 80.76195, 79…\n$ dow               <ord> Sunday, Monday, Tuesday, Wednesday, Thursday, Friday…\n$ admit_date_int    <int> 16071, 16072, 16073, 16074, 16075, 16076, 16077, 160…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_ts_sep = function(pm_components, df_date, y, dat){\n  \n  fit_model = glue('{y} ~ {pm_components} +\n                    s(admit_date_int, k = {df_date}, fx = T, bs = \"cr\") +\n                    dow + s(Temperature_MA_07, k = 6) +\n                    s(RH_MA_07, k = 6)') %>%\n    as.formula() %>%\n    gam(family = quasipoisson(link = \"log\"),\n        scale = -1,\n        control = gam.control(epsilon = 0.0000001,\n                              maxit = 1000),\n        na.action = na.omit,\n        data = dat)\n  \n  coef_vec = summary(fit_model)$p.coeff\n  se_vec = summary(fit_model)$se\n  pval_vec = summary(fit_model)$p.pv\n  \n  coef_point = coef_vec[names(coef_vec) == pm_components]\n  se_point = se_vec[names(se_vec) == pm_components]\n  pval_point = pval_vec[names(pval_vec) == pm_components]\n  \n  ER = (exp(coef_point) - 1)*100\n  CI_lower = (exp(coef_point - 1.96*se_point) - 1)*100\n  CI_upper = (exp(coef_point + 1.96*se_point) - 1)*100\n  \n  ER_95CI = glue(\"{formatC(round(ER, 2), format = 'f', digits = 2)} \",\n                 \"({formatC(round(CI_lower, 2), format = 'f', digits = 2)} to \",\n                 \"{formatC(round(CI_upper, 2), format = 'f', digits = 2)})\")\n  \n  output = data.table(\n    pm_components = pm_components, \n    #pm_component_IQR = formatC(round(IQR_range, 2), format = 'f', digits = 2), \n    n = dat[,.N],\n    ER_95CI = ER_95CI,\n    ER = ER, \n    CI_lower = CI_lower, \n    CI_upper = CI_upper, \n    p_value = pval_point,\n    log_OR = coef_point, \n    log_OR_se = se_point)\n  \n  return(output)\n}\n\nmap_city = function(dat, df_date, y){\n  \n  #pb$tick()$print()\n  df_date_vector = rep(df_date, length(pollutant_vec7))\n  \n  res = map2_dfr(pollutant_vec7, df_date, fit_ts_sep, dat = dat, y = y)\n  \n  return(res)\n}\n```\n:::\n\n\n\n## 第一阶段GAM建模\n\n### 计算各污染物的四分位间距\n\n\n::: {.cell}\n\n```{.r .cell-code}\npollutant_vec7 = c(\n  \"PM2.5_MA_07\", \"BC_MA_07\", \"OM_MA_07\", \"SO4_MA_07\", \"NO3_MA_07\", \"NH4_MA_07\")\n\nIQR_pollutant = map_dfr(\n  pollutant_vec7,\n  ~data.table(pollutant = .x, \n              IQR = IQR(ts_city[[.x]], na.rm = TRUE)))\n\nIQR_pollutant\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     pollutant        IQR\n1: PM2.5_MA_07 22.6991687\n2:    BC_MA_07  0.9554241\n3:    OM_MA_07  5.6129462\n4:   SO4_MA_07  4.1445419\n5:   NO3_MA_07  6.7363995\n6:   NH4_MA_07  4.3471178\n```\n:::\n:::\n\n### 设置各个城市的观测时长的自由度\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncity_obs_length = ts_city %>% \n  group_by(City) %>% \n  summarise(admit_date_min = min(admit_date),\n            admit_date_max = max(admit_date),\n            obs_length = as.integer(max(admit_date) - min(admit_date))/365,\n            df = round(obs_length)*4) %>% \n  ungroup()\n\ncity_obs_length\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 × 5\n   City    admit_date_min admit_date_max obs_length    df\n   <chr>   <date>         <date>              <dbl> <dbl>\n 1 city_01 2014-01-01     2016-12-30           3.00    12\n 2 city_02 2014-01-01     2016-12-30           3.00    12\n 3 city_03 2014-01-01     2016-12-30           3.00    12\n 4 city_04 2014-01-01     2016-12-30           3.00    12\n 5 city_05 2014-01-01     2016-12-30           3.00    12\n 6 city_06 2014-01-01     2016-12-30           3.00    12\n 7 city_07 2014-01-01     2016-12-30           3.00    12\n 8 city_08 2014-01-01     2016-12-30           3.00    12\n 9 city_09 2014-01-01     2016-12-29           2.99    12\n10 city_10 2014-01-01     2016-12-30           3.00    12\n# ℹ 11 more rows\n```\n:::\n:::\n\n\n### 分城市进行建模\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodels_city = ts_city %>% \n  mutate(across(PM2.5_MA_07:BC_MA_07, ~.x/IQR(.x))) %>% \n  group_by(City) %>% \n  nest() %>%\n  left_join(city_obs_length %>% \n              dplyr::select(City, df),\n            by = 'City') %>% \n  mutate(models = map2(data, df, map_city, y = 'N'))\n\nmodels_city\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 × 4\n# Groups:   City [21]\n   City    data                     df models      \n   <chr>   <list>                <dbl> <list>      \n 1 city_01 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 2 city_02 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 3 city_03 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 4 city_04 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 5 city_05 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 6 city_06 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 7 city_07 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 8 city_08 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n 9 city_09 <tibble [1,094 × 12]>    12 <dt [6 × 8]>\n10 city_10 <tibble [1,095 × 12]>    12 <dt [6 × 8]>\n# ℹ 11 more rows\n```\n:::\n:::\n\n### 计算各城市的模型估计值\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestimate_city = models_city %>% \n  select(-data) %>% \n  unnest(cols = c(models)) %>% \n  setDT()\nestimate_city\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        City df pm_components               ER_95CI         ER   CI_lower\n  1: city_01 12   PM2.5_MA_07  0.79 (-2.83 to 4.55)  0.7930900 -2.8296791\n  2: city_01 12      BC_MA_07 -0.85 (-3.47 to 1.83) -0.8534384 -3.4659267\n  3: city_01 12      OM_MA_07 -0.51 (-3.34 to 2.40) -0.5118881 -3.3424207\n  4: city_01 12     SO4_MA_07  2.59 (-1.14 to 6.46)  2.5889907 -1.1405705\n  5: city_01 12     NO3_MA_07  1.55 (-2.76 to 6.05)  1.5528460 -2.7551925\n ---                                                                     \n122: city_21 12      BC_MA_07  0.38 (-5.67 to 6.82)  0.3789915 -5.6708142\n123: city_21 12      OM_MA_07 5.76 (-1.36 to 13.39)  5.7578337 -1.3584923\n124: city_21 12     SO4_MA_07  9.94 (0.33 to 20.46)  9.9379058  0.3315034\n125: city_21 12     NO3_MA_07 20.06 (8.06 to 33.40) 20.0614717  8.0555993\n126: city_21 12     NH4_MA_07 12.56 (2.03 to 24.17) 12.5562146  2.0258434\n      CI_upper      p_value       log_OR  log_OR_se\n  1:  4.550926 0.6723891302  0.007899615 0.01867575\n  2:  1.829751 0.5294120184 -0.008571010 0.01362405\n  3:  2.401534 0.7275376000 -0.005132028 0.01472629\n  4:  6.459253 0.1763879549  0.025560438 0.01889372\n  5:  6.051735 0.4861197066  0.015409127 0.02211619\n ---                                               \n122:  6.816802 0.9050826372  0.003782751 0.03171546\n123: 13.387555 0.1155189939  0.055981707 0.03554069\n124: 20.464089 0.0425078336  0.094745528 0.04665101\n125: 33.401296 0.0006954683  0.182833690 0.05375407\n126: 24.173455 0.0184442512  0.118282596 0.05011563\n```\n:::\n:::\n\n\n\n## 第二阶段meta分析\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_rma = function(x, dat){\n  dat %>% \n    .[pm_components == x] %>% \n    .[,metafor::rma(yi = log_OR, sei = log_OR_se)] %>% \n    tidy(conf.int = T, exponentiate = T) %>% \n    mutate(pollut = x, \n           `ER (95% CI)` = glue(\n           \"{formatC((estimate - 1)*100, \n           format = 'f', digits = 2)}% ({formatC((conf.low - 1)*100, \n           format = 'f', digits = 2)} to {formatC((conf.high - 1)*100, \n           format = 'f', digits = 2)}%)\")) %>% \n    dplyr::select(pollut, \n                  `ER (95% CI)`,\n                  OR = estimate, \n                  OR_CI_low = conf.low, \n                  OR_CI_up = conf.high, \n                  p_val = p.value, \n                  se = std.error)\n}\nestimate_meta = map_dfr(pollutant_vec7, tidy_rma, dat = estimate_city)\nestimate_meta\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  pollut      `ER (95% CI)`             OR OR_CI_low OR_CI_up      p_val      se\n  <chr>       <glue>                 <dbl>     <dbl>    <dbl>      <dbl>   <dbl>\n1 PM2.5_MA_07 0.94% (0.40 to 1.49%)   1.01     1.00      1.01 0.000710   0.00277\n2 BC_MA_07    0.04% (-0.33 to 0.41%)  1.00     0.997     1.00 0.824      0.00188\n3 OM_MA_07    0.36% (-0.07 to 0.79%)  1.00     0.999     1.01 0.0970     0.00219\n4 SO4_MA_07   1.39% (0.82 to 1.98%)   1.01     1.01      1.02 0.00000216 0.00292\n5 NO3_MA_07   1.41% (0.67 to 2.15%)   1.01     1.01      1.02 0.000177   0.00373\n6 NH4_MA_07   0.97% (0.34 to 1.60%)   1.01     1.00      1.02 0.00239    0.00317\n```\n:::\n:::\n\n\n结果可视化\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestimate_meta %>%\n  mutate(pollutant = gsub('_MA_07', '', pollut)) %>%\n  ggplot(aes(pollutant, OR)) +\n  geom_hline(yintercept = 1, color = 'red', linewidth = 1) +\n  geom_errorbar(aes(ymin = OR_CI_low, ymax = OR_CI_up), width = 0.25) +\n  geom_point(size = 4) +\n  labs(x = 'Pollutants', y = 'OR (95%)') +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](2.ts_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "2.ts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}