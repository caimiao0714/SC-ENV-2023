{
  "hash": "d728c8d7dc3a5fb3691566f833c4d427",
  "result": {
    "markdown": "---\ntitle: \"队列研究\"\nlinkcolor: '#08519c'\nnavbar: right\n---\n\n\n# 文献实例\n\n- Di, Q., Wang, Y., Zanobetti, A., Wang, Y., Koutrakis, P., Choirat, C., ... Schwartz, J. D. (2017). Air pollution and mortality in the Medicare population. ***New England Journal of Medicine*** ([IF=176]{style=\"color:#9A0000;font-weight: bold;\"}), 376(26), 2513-2522. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Di_2017_NEJM.pdf) DOI: [10.1056/NEJMoa1702747](https://doi.org/10.1056/NEJMoa1702747)\n\n- Yu, K., Qiu, G., Chan, K. H., Lam, K. B. H., Kurmi, O. P., Bennett, D. A., ...  Wu, T. (2018). Association of solid fuel use with risk of cardiovascular and all-cause mortality in rural China. ***JAMA*** ([IF=157]{style=\"color:#9A0000;font-weight: bold;\"}), 319(13), 1351-1361. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/Yu_2018_JAMA_solid_fuel_use.pdf) DOI: \\href{https://doi.org/10.1001/jama.2018.2151}{10.1001/jama.2018.2151}\n\n- **Cai, M.**, Li, H., Wu, Y., Zhang. S., Wang. X., Zhang. Z., Lin. H. (2022) Ambient Air Pollution Associated with Body Fat Percentages at Different Body Compartments: A Cohort Study of UK Biobank Participants. ***Environmental Health Perspectives*** ([IF=11.0]{style=\"color:#9A0000;font-weight: bold;\"}). 130(6): 067702. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/2022_1_EHP10920_PM_body_fat_composition.pdf) \n\n- **Cai, M.**, Lin, X., Wang, X., Zhang, S., Qian, Z., McMillin, S.E., Aaron, H.E., Lin, H., Wei, J., Zhang, Z., Pan, J. (2022) Ambient particulate matter pollution of different sizes associated with recurrent stroke hospitalization in China: a cohort study of 1.07 million stroke patients. ***Science of the Total Environment*** ([IF=10.8]{style=\"color:#9A0000;font-weight: bold;\"}). 159104. [PDF {{< fa book-open >}}](https://caimiao0714.github.io/SC-ENV-2023/Papers/2022_1_STOTEN_PM_stroke_rehospitalization.pdf) \n\n\n\n\n# R语言代码实战\n\n## Cox回归\n\n### 读取数据\n\n\n::: {.cell hash='5.cohort_cache/html/unnamed-chunk-1_3abfe41565848590c90496f6600e3513'}\n\n```{.r .cell-code}\npacman::p_load(\n  arrow, dplyr, ggplot2, data.table, broom, splines, survival, purrr)\n\ncohort_cox = arrow::read_parquet(\n  'Data/cohort_Cox_synthetic.parquet')\n\nglimpse(cohort_cox)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 8,411\nColumns: 12\n$ rehosp_staus      <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0…\n$ t2rehosp          <int> 741, 1267, 510, 126, 1076, 402, 980, 589, 502, 524, …\n$ age               <dbl> 74, 79, 72, 79, 52, 75, 68, 62, 75, 73, 77, 70, 76, …\n$ sex               <fct> Female, Female, Female, Female, Female, Female, Fema…\n$ ethnicity         <fct> Han, Han, Han, Han, Han, Han, Han, Han, Han, Han, Ha…\n$ marriage          <fct> Married, Married, Married, Married, Married, Married…\n$ occupation        <fct> Farmer, Farmer, Other, Other, Other, Farmer, Other, …\n$ PM1_MA_365        <dbl> 26.94837, 21.58845, 26.15891, 25.80991, 34.91308, 36…\n$ PM2.5_MA_365      <dbl> 41.79592, 31.49986, 36.12802, 42.01941, 48.28277, 44…\n$ PM10_MA_365       <dbl> 68.51770, 63.77828, 57.15183, 67.48609, 76.22407, 72…\n$ Temperature_MA_07 <dbl> 5.847840, 24.166486, 26.243227, 9.688386, 6.529096, …\n$ RH_MA_07          <dbl> 73.08185, 67.75124, 87.87124, 72.36949, 68.59028, 71…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrehcox = function(x, dat = drehosp, commorbidity = comorbidity_vec, scale_num = 10){\n  clean_fit = coxph(\n    formula = as.formula(paste0(\"Surv(t2rehosp2, rehosp_staus) ~ \", \n                    x, \n                    ' + age + sex + ethnicity + marriage + occupation +\n                    payment_method + admission_status + stroke_subtype + \n                    ns(Temperature_MA_07, df = 5) + ns(RH_MA_07, df = 5) + ',\n                    commorbidity)), \n    data = dat) %>% \n    tidy() %>% \n    filter(grepl('PM|O3|CO|NO2|SO2', term)) %>% \n    mutate(OR = exp(estimate*scale_num), 3,\n           OR_round = round(exp(estimate*scale_num), 3),\n           CI_low = exp(estimate*scale_num - 1.96*std.error*scale_num),\n           CI_high = exp(estimate*scale_num + 1.96*std.error*scale_num),\n           CI_low_round = round(exp(estimate*scale_num - 1.96*std.error*scale_num), 3),\n           CI_high_round = round(exp(estimate*scale_num + 1.96*std.error*scale_num), 3),\n           predictor = x) %>% \n    mutate(result = paste0(format(OR_round, nsmall = 3), \n                           ' (', \n                           format(CI_low_round, nsmall = 3), \n                           '-', \n                           format(CI_high_round, nsmall = 3),\n                           ')')) %>% \n    select(predictor, term, result, OR, CI_low, CI_high, p.value) \n  \n  print(x)\n  \n  return(clean_fit)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmap_dfr(\n     c(\"PM1_MA_07\", \"PM2.5_MA_07\", \"PM10_MA_07\",\n       \"PM1_MA_365\", \"PM2.5_MA_365\", \"PM10_MA_365\"), \n     rehcox, \n     dat = drehosp,\n     scale_num = 10)\n```\n:::\n\n\n\n## 混合线性模型\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_lme = function(y){\n  f0 = lmer(get(y) ~ PM2.5_2010:delta_t + age + sex + smoking_status +\n              (1|id), data = cohort_lmer)\n  \n  f0 %>% \n    tidy(conf.int = TRUE) %>% \n    filter(grepl('PM2.5_2010', term)) %>% \n    mutate(estimate = estimate*8.36,\n           conf.low = conf.low*8.36,\n           conf.high = conf.high*8.36) %>% \n    mutate(CI = paste0(str_pad(round(estimate, 3), width = 5, side = 'right', pad = '0'), \n                       ' (', \n                       str_pad(round(conf.low, 3), width = 5, side = 'right', pad = '0'), \n                       ', ', \n                       str_pad(round(conf.high, 3), width = 5, side = 'right', pad = '0'), \n                       ')')) %>% \n    select(term, estimate, CI, conf.low, conf.high, std.error) %>% \n    mutate(term = y,\n           N = nobs(f0))\n}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}